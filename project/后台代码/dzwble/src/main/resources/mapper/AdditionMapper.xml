<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.AdditionMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.Addition" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="bid" property="bid" jdbcType="VARCHAR" />
    <result column="aname" property="aname" jdbcType="VARCHAR" />
    <result column="aprice" property="aprice" jdbcType="REAL" />
    <result column="pcid" property="pcid" jdbcType="INTEGER" />
    <result column="remark1" property="remark1" jdbcType="VARCHAR" />
    <result column="remark2" property="remark2" jdbcType="VARCHAR" />
    <result column="remark3" property="remark3" jdbcType="VARCHAR" />
    <result column="remark4" property="remark4" jdbcType="VARCHAR" />
    <result column="remark5" property="remark5" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, bid, aname, aprice, pcid, remark1, remark2, remark3, remark4, remark5
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.AdditionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from addition
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from addition
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from addition
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.AdditionExample" >
    delete from addition
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.Addition" >
    insert into addition (id, bid, aname, 
      aprice, pcid, remark1, 
      remark2, remark3, remark4, 
      remark5)
    values (#{id,jdbcType=INTEGER}, #{bid,jdbcType=VARCHAR}, #{aname,jdbcType=VARCHAR}, 
      #{aprice,jdbcType=REAL}, #{pcid,jdbcType=INTEGER}, #{remark1,jdbcType=VARCHAR}, 
      #{remark2,jdbcType=VARCHAR}, #{remark3,jdbcType=VARCHAR}, #{remark4,jdbcType=VARCHAR}, 
      #{remark5,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.Addition" >
    insert into addition
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bid != null" >
        bid,
      </if>
      <if test="aname != null" >
        aname,
      </if>
      <if test="aprice != null" >
        aprice,
      </if>
      <if test="pcid != null" >
        pcid,
      </if>
      <if test="remark1 != null" >
        remark1,
      </if>
      <if test="remark2 != null" >
        remark2,
      </if>
      <if test="remark3 != null" >
        remark3,
      </if>
      <if test="remark4 != null" >
        remark4,
      </if>
      <if test="remark5 != null" >
        remark5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bid != null" >
        #{bid,jdbcType=VARCHAR},
      </if>
      <if test="aname != null" >
        #{aname,jdbcType=VARCHAR},
      </if>
      <if test="aprice != null" >
        #{aprice,jdbcType=REAL},
      </if>
      <if test="pcid != null" >
        #{pcid,jdbcType=INTEGER},
      </if>
      <if test="remark1 != null" >
        #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null" >
        #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="remark3 != null" >
        #{remark3,jdbcType=VARCHAR},
      </if>
      <if test="remark4 != null" >
        #{remark4,jdbcType=VARCHAR},
      </if>
      <if test="remark5 != null" >
        #{remark5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.AdditionExample" resultType="java.lang.Integer" >
    select count(*) from addition
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update addition
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bid != null" >
        bid = #{record.bid,jdbcType=VARCHAR},
      </if>
      <if test="record.aname != null" >
        aname = #{record.aname,jdbcType=VARCHAR},
      </if>
      <if test="record.aprice != null" >
        aprice = #{record.aprice,jdbcType=REAL},
      </if>
      <if test="record.pcid != null" >
        pcid = #{record.pcid,jdbcType=INTEGER},
      </if>
      <if test="record.remark1 != null" >
        remark1 = #{record.remark1,jdbcType=VARCHAR},
      </if>
      <if test="record.remark2 != null" >
        remark2 = #{record.remark2,jdbcType=VARCHAR},
      </if>
      <if test="record.remark3 != null" >
        remark3 = #{record.remark3,jdbcType=VARCHAR},
      </if>
      <if test="record.remark4 != null" >
        remark4 = #{record.remark4,jdbcType=VARCHAR},
      </if>
      <if test="record.remark5 != null" >
        remark5 = #{record.remark5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update addition
    set id = #{record.id,jdbcType=INTEGER},
      bid = #{record.bid,jdbcType=VARCHAR},
      aname = #{record.aname,jdbcType=VARCHAR},
      aprice = #{record.aprice,jdbcType=REAL},
      pcid = #{record.pcid,jdbcType=INTEGER},
      remark1 = #{record.remark1,jdbcType=VARCHAR},
      remark2 = #{record.remark2,jdbcType=VARCHAR},
      remark3 = #{record.remark3,jdbcType=VARCHAR},
      remark4 = #{record.remark4,jdbcType=VARCHAR},
      remark5 = #{record.remark5,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.Addition" >
    update addition
    <set >
      <if test="bid != null" >
        bid = #{bid,jdbcType=VARCHAR},
      </if>
      <if test="aname != null" >
        aname = #{aname,jdbcType=VARCHAR},
      </if>
      <if test="aprice != null" >
        aprice = #{aprice,jdbcType=REAL},
      </if>
      <if test="pcid != null" >
        pcid = #{pcid,jdbcType=INTEGER},
      </if>
      <if test="remark1 != null" >
        remark1 = #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null" >
        remark2 = #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="remark3 != null" >
        remark3 = #{remark3,jdbcType=VARCHAR},
      </if>
      <if test="remark4 != null" >
        remark4 = #{remark4,jdbcType=VARCHAR},
      </if>
      <if test="remark5 != null" >
        remark5 = #{remark5,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.Addition" >
    update addition
    set bid = #{bid,jdbcType=VARCHAR},
      aname = #{aname,jdbcType=VARCHAR},
      aprice = #{aprice,jdbcType=REAL},
      pcid = #{pcid,jdbcType=INTEGER},
      remark1 = #{remark1,jdbcType=VARCHAR},
      remark2 = #{remark2,jdbcType=VARCHAR},
      remark3 = #{remark3,jdbcType=VARCHAR},
      remark4 = #{remark4,jdbcType=VARCHAR},
      remark5 = #{remark5,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>