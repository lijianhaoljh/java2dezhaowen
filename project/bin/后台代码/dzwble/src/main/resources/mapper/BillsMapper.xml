<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.BillsMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.Bills" >
    <id column="bid" property="bid" jdbcType="VARCHAR" />
    <result column="bstate" property="bstate" jdbcType="INTEGER" />
    <result column="tid" property="tid" jdbcType="INTEGER" />
    <result column="cdlicense" property="cdlicense" jdbcType="VARCHAR" />
    <result column="pno" property="pno" jdbcType="VARCHAR" />
    <result column="mid" property="mid" jdbcType="INTEGER" />
    <result column="person" property="person" jdbcType="VARCHAR" />
    <result column="delays_reason" property="delaysReason" jdbcType="VARCHAR" />
    <result column="quality" property="quality" jdbcType="VARCHAR" />
    <result column="qualified" property="qualified" jdbcType="INTEGER" />
    <result column="n_rework" property="nRework" jdbcType="INTEGER" />
    <result column="p_amount" property="pAmount" jdbcType="REAL" />
    <result column="rid" property="rid" jdbcType="INTEGER" />
    <result column="remark1" property="remark1" jdbcType="VARCHAR" />
    <result column="remark2" property="remark2" jdbcType="VARCHAR" />
    <result column="remark3" property="remark3" jdbcType="VARCHAR" />
    <result column="remark4" property="remark4" jdbcType="VARCHAR" />
    <result column="remark5" property="remark5" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    bid, bstate, tid, cdlicense, pno, mid, person, delays_reason, quality, qualified, 
    n_rework, p_amount, rid, remark1, remark2, remark3, remark4, remark5
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.BillsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bills
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bills
    where bid = #{bid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from bills
    where bid = #{bid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.BillsExample" >
    delete from bills
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.Bills" >
    insert into bills (bid, bstate, tid, 
      cdlicense, pno, mid, 
      person, delays_reason, quality, 
      qualified, n_rework, p_amount, 
      rid, remark1, remark2, 
      remark3, remark4, remark5
      )
    values (#{bid,jdbcType=VARCHAR}, #{bstate,jdbcType=INTEGER}, #{tid,jdbcType=INTEGER}, 
      #{cdlicense,jdbcType=VARCHAR}, #{pno,jdbcType=VARCHAR}, #{mid,jdbcType=INTEGER}, 
      #{person,jdbcType=VARCHAR}, #{delaysReason,jdbcType=VARCHAR}, #{quality,jdbcType=VARCHAR}, 
      #{qualified,jdbcType=INTEGER}, #{nRework,jdbcType=INTEGER}, #{pAmount,jdbcType=REAL}, 
      #{rid,jdbcType=INTEGER}, #{remark1,jdbcType=VARCHAR}, #{remark2,jdbcType=VARCHAR}, 
      #{remark3,jdbcType=VARCHAR}, #{remark4,jdbcType=VARCHAR}, #{remark5,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.Bills" >
    insert into bills
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bid != null" >
        bid,
      </if>
      <if test="bstate != null" >
        bstate,
      </if>
      <if test="tid != null" >
        tid,
      </if>
      <if test="cdlicense != null" >
        cdlicense,
      </if>
      <if test="pno != null" >
        pno,
      </if>
      <if test="mid != null" >
        mid,
      </if>
      <if test="person != null" >
        person,
      </if>
      <if test="delaysReason != null" >
        delays_reason,
      </if>
      <if test="quality != null" >
        quality,
      </if>
      <if test="qualified != null" >
        qualified,
      </if>
      <if test="nRework != null" >
        n_rework,
      </if>
      <if test="pAmount != null" >
        p_amount,
      </if>
      <if test="rid != null" >
        rid,
      </if>
      <if test="remark1 != null" >
        remark1,
      </if>
      <if test="remark2 != null" >
        remark2,
      </if>
      <if test="remark3 != null" >
        remark3,
      </if>
      <if test="remark4 != null" >
        remark4,
      </if>
      <if test="remark5 != null" >
        remark5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bid != null" >
        #{bid,jdbcType=VARCHAR},
      </if>
      <if test="bstate != null" >
        #{bstate,jdbcType=INTEGER},
      </if>
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="cdlicense != null" >
        #{cdlicense,jdbcType=VARCHAR},
      </if>
      <if test="pno != null" >
        #{pno,jdbcType=VARCHAR},
      </if>
      <if test="mid != null" >
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="person != null" >
        #{person,jdbcType=VARCHAR},
      </if>
      <if test="delaysReason != null" >
        #{delaysReason,jdbcType=VARCHAR},
      </if>
      <if test="quality != null" >
        #{quality,jdbcType=VARCHAR},
      </if>
      <if test="qualified != null" >
        #{qualified,jdbcType=INTEGER},
      </if>
      <if test="nRework != null" >
        #{nRework,jdbcType=INTEGER},
      </if>
      <if test="pAmount != null" >
        #{pAmount,jdbcType=REAL},
      </if>
      <if test="rid != null" >
        #{rid,jdbcType=INTEGER},
      </if>
      <if test="remark1 != null" >
        #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null" >
        #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="remark3 != null" >
        #{remark3,jdbcType=VARCHAR},
      </if>
      <if test="remark4 != null" >
        #{remark4,jdbcType=VARCHAR},
      </if>
      <if test="remark5 != null" >
        #{remark5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.BillsExample" resultType="java.lang.Integer" >
    select count(*) from bills
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bills
    <set >
      <if test="record.bid != null" >
        bid = #{record.bid,jdbcType=VARCHAR},
      </if>
      <if test="record.bstate != null" >
        bstate = #{record.bstate,jdbcType=INTEGER},
      </if>
      <if test="record.tid != null" >
        tid = #{record.tid,jdbcType=INTEGER},
      </if>
      <if test="record.cdlicense != null" >
        cdlicense = #{record.cdlicense,jdbcType=VARCHAR},
      </if>
      <if test="record.pno != null" >
        pno = #{record.pno,jdbcType=VARCHAR},
      </if>
      <if test="record.mid != null" >
        mid = #{record.mid,jdbcType=INTEGER},
      </if>
      <if test="record.person != null" >
        person = #{record.person,jdbcType=VARCHAR},
      </if>
      <if test="record.delaysReason != null" >
        delays_reason = #{record.delaysReason,jdbcType=VARCHAR},
      </if>
      <if test="record.quality != null" >
        quality = #{record.quality,jdbcType=VARCHAR},
      </if>
      <if test="record.qualified != null" >
        qualified = #{record.qualified,jdbcType=INTEGER},
      </if>
      <if test="record.nRework != null" >
        n_rework = #{record.nRework,jdbcType=INTEGER},
      </if>
      <if test="record.pAmount != null" >
        p_amount = #{record.pAmount,jdbcType=REAL},
      </if>
      <if test="record.rid != null" >
        rid = #{record.rid,jdbcType=INTEGER},
      </if>
      <if test="record.remark1 != null" >
        remark1 = #{record.remark1,jdbcType=VARCHAR},
      </if>
      <if test="record.remark2 != null" >
        remark2 = #{record.remark2,jdbcType=VARCHAR},
      </if>
      <if test="record.remark3 != null" >
        remark3 = #{record.remark3,jdbcType=VARCHAR},
      </if>
      <if test="record.remark4 != null" >
        remark4 = #{record.remark4,jdbcType=VARCHAR},
      </if>
      <if test="record.remark5 != null" >
        remark5 = #{record.remark5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bills
    set bid = #{record.bid,jdbcType=VARCHAR},
      bstate = #{record.bstate,jdbcType=INTEGER},
      tid = #{record.tid,jdbcType=INTEGER},
      cdlicense = #{record.cdlicense,jdbcType=VARCHAR},
      pno = #{record.pno,jdbcType=VARCHAR},
      mid = #{record.mid,jdbcType=INTEGER},
      person = #{record.person,jdbcType=VARCHAR},
      delays_reason = #{record.delaysReason,jdbcType=VARCHAR},
      quality = #{record.quality,jdbcType=VARCHAR},
      qualified = #{record.qualified,jdbcType=INTEGER},
      n_rework = #{record.nRework,jdbcType=INTEGER},
      p_amount = #{record.pAmount,jdbcType=REAL},
      rid = #{record.rid,jdbcType=INTEGER},
      remark1 = #{record.remark1,jdbcType=VARCHAR},
      remark2 = #{record.remark2,jdbcType=VARCHAR},
      remark3 = #{record.remark3,jdbcType=VARCHAR},
      remark4 = #{record.remark4,jdbcType=VARCHAR},
      remark5 = #{record.remark5,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.Bills" >
    update bills
    <set >
      <if test="bstate != null" >
        bstate = #{bstate,jdbcType=INTEGER},
      </if>
      <if test="tid != null" >
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="cdlicense != null" >
        cdlicense = #{cdlicense,jdbcType=VARCHAR},
      </if>
      <if test="pno != null" >
        pno = #{pno,jdbcType=VARCHAR},
      </if>
      <if test="mid != null" >
        mid = #{mid,jdbcType=INTEGER},
      </if>
      <if test="person != null" >
        person = #{person,jdbcType=VARCHAR},
      </if>
      <if test="delaysReason != null" >
        delays_reason = #{delaysReason,jdbcType=VARCHAR},
      </if>
      <if test="quality != null" >
        quality = #{quality,jdbcType=VARCHAR},
      </if>
      <if test="qualified != null" >
        qualified = #{qualified,jdbcType=INTEGER},
      </if>
      <if test="nRework != null" >
        n_rework = #{nRework,jdbcType=INTEGER},
      </if>
      <if test="pAmount != null" >
        p_amount = #{pAmount,jdbcType=REAL},
      </if>
      <if test="rid != null" >
        rid = #{rid,jdbcType=INTEGER},
      </if>
      <if test="remark1 != null" >
        remark1 = #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null" >
        remark2 = #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="remark3 != null" >
        remark3 = #{remark3,jdbcType=VARCHAR},
      </if>
      <if test="remark4 != null" >
        remark4 = #{remark4,jdbcType=VARCHAR},
      </if>
      <if test="remark5 != null" >
        remark5 = #{remark5,jdbcType=VARCHAR},
      </if>
    </set>
    where bid = #{bid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.Bills" >
    update bills
    set bstate = #{bstate,jdbcType=INTEGER},
      tid = #{tid,jdbcType=INTEGER},
      cdlicense = #{cdlicense,jdbcType=VARCHAR},
      pno = #{pno,jdbcType=VARCHAR},
      mid = #{mid,jdbcType=INTEGER},
      person = #{person,jdbcType=VARCHAR},
      delays_reason = #{delaysReason,jdbcType=VARCHAR},
      quality = #{quality,jdbcType=VARCHAR},
      qualified = #{qualified,jdbcType=INTEGER},
      n_rework = #{nRework,jdbcType=INTEGER},
      p_amount = #{pAmount,jdbcType=REAL},
      rid = #{rid,jdbcType=INTEGER},
      remark1 = #{remark1,jdbcType=VARCHAR},
      remark2 = #{remark2,jdbcType=VARCHAR},
      remark3 = #{remark3,jdbcType=VARCHAR},
      remark4 = #{remark4,jdbcType=VARCHAR},
      remark5 = #{remark5,jdbcType=VARCHAR}
    where bid = #{bid,jdbcType=VARCHAR}
  </update>
</mapper>