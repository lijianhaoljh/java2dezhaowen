<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.MechanicMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.Mechanic" >
    <result column="pno" property="pno" jdbcType="VARCHAR" />
    <result column="tid" property="tid" jdbcType="INTEGER" />
    <result column="jid" property="jid" jdbcType="INTEGER" />
    <result column="rid" property="rid" jdbcType="INTEGER" />
    <result column="mcisgroup" property="mcisgroup" jdbcType="INTEGER" />
    <result column="lid" property="lid" jdbcType="INTEGER" />
    <result column="mcworktype" property="mcworktype" jdbcType="VARCHAR" />
    <result column="mcbrand" property="mcbrand" jdbcType="VARCHAR" />
    <result column="remark1" property="remark1" jdbcType="VARCHAR" />
    <result column="remark2" property="remark2" jdbcType="VARCHAR" />
    <result column="remark3" property="remark3" jdbcType="VARCHAR" />
    <result column="remark4" property="remark4" jdbcType="VARCHAR" />
    <result column="remark5" property="remark5" jdbcType="VARCHAR" />
    
    <result column="pname" property="pname" jdbcType="VARCHAR" />
    <result column="psex" property="psex" jdbcType="CHAR" />
    <result column="pidcard" property="pidcard" jdbcType="VARCHAR" />
    <result column="paddress" property="paddress" jdbcType="VARCHAR" />
    <result column="pphone" property="pphone" jdbcType="VARCHAR" />
    <result column="ptellphone" property="ptellphone" jdbcType="VARCHAR" />
    <result column="pemail" property="pemail" jdbcType="VARCHAR" />
    <result column="spassword" property="spassword" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="pbank" property="pbank" jdbcType="VARCHAR" />
    <result column="pbanknumber" property="pbanknumber" jdbcType="VARCHAR" />
    <result column="presidenceaddress" property="presidenceaddress" jdbcType="VARCHAR" />
    <result column="ptid" property="ptid" jdbcType="INTEGER" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="dimission" property="dimission" jdbcType="INTEGER" />
    <result column="dcause" property="dcause" jdbcType="VARCHAR" />
    
    <result column="tname" property="tname" jdbcType="VARCHAR" />
    <result column="lname" property="lname" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <select id="queryMechanicBytid" resultMap="BaseResultMap">
	  	SELECT m.*,peo.*,t.tname tname,l.lname FROM mechanic AS m
	LEFT JOIN people AS peo ON m.pno=peo.pno
	LEFT JOIN team AS t ON t.tid=m.tid
	LEFT JOIN `level` AS l ON m.lid=l.lid
	WHERE peo.dimission=0 AND t.tid=#{tid} AND (peo.pno LIKE concat("%",#{pno},"%") OR peo.pname LIKE concat("%",#{pno},"%") OR peo.pphone LIKE concat("%",#{pno},"%"))
  </select>

  <select id="queryMechanicByparentid" resultMap="BaseResultMap">
	  	SELECT m.*,peo.*,t.tname tname,l.lname FROM mechanic AS m
	LEFT JOIN people AS peo ON m.pno=peo.pno
	LEFT JOIN team AS t ON t.tid=m.tid
	LEFT JOIN `level` AS l ON m.lid=l.lid
	WHERE peo.dimission=0 AND t.parentid=#{parentid} AND (peo.pno LIKE concat("%",#{pno},"%") OR peo.pname LIKE concat("%",#{pno},"%") OR peo.pphone LIKE concat("%",#{pno},"%"))
  </select>
  
  <sql id="Base_Column_List" >
    pno, tid, jid, rid, mcisgroup, lid, mcworktype, mcbrand, remark1, remark2, remark3, 
    remark4, remark5
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.MechanicExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mechanic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.accp.domain.MechanicExample" >
    delete from mechanic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.Mechanic" >
    insert into mechanic (pno, tid, jid, 
      rid, mcisgroup, lid, 
      mcworktype, mcbrand, remark1, 
      remark2, remark3, remark4, 
      remark5)
    values (#{pno,jdbcType=VARCHAR}, #{tid,jdbcType=INTEGER}, #{jid,jdbcType=INTEGER}, 
      #{rid,jdbcType=INTEGER}, #{mcisgroup,jdbcType=INTEGER}, #{lid,jdbcType=INTEGER}, 
      #{mcworktype,jdbcType=VARCHAR}, #{mcbrand,jdbcType=VARCHAR}, #{remark1,jdbcType=VARCHAR}, 
      #{remark2,jdbcType=VARCHAR}, #{remark3,jdbcType=VARCHAR}, #{remark4,jdbcType=VARCHAR}, 
      #{remark5,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.Mechanic" >
    insert into mechanic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pno != null" >
        pno,
      </if>
      <if test="tid != null" >
        tid,
      </if>
      <if test="jid != null" >
        jid,
      </if>
      <if test="rid != null" >
        rid,
      </if>
      <if test="mcisgroup != null" >
        mcisgroup,
      </if>
      <if test="lid != null" >
        lid,
      </if>
      <if test="mcworktype != null" >
        mcworktype,
      </if>
      <if test="mcbrand != null" >
        mcbrand,
      </if>
      <if test="remark1 != null" >
        remark1,
      </if>
      <if test="remark2 != null" >
        remark2,
      </if>
      <if test="remark3 != null" >
        remark3,
      </if>
      <if test="remark4 != null" >
        remark4,
      </if>
      <if test="remark5 != null" >
        remark5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pno != null" >
        #{pno,jdbcType=VARCHAR},
      </if>
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="jid != null" >
        #{jid,jdbcType=INTEGER},
      </if>
      <if test="rid != null" >
        #{rid,jdbcType=INTEGER},
      </if>
      <if test="mcisgroup != null" >
        #{mcisgroup,jdbcType=INTEGER},
      </if>
      <if test="lid != null" >
        #{lid,jdbcType=INTEGER},
      </if>
      <if test="mcworktype != null" >
        #{mcworktype,jdbcType=VARCHAR},
      </if>
      <if test="mcbrand != null" >
        #{mcbrand,jdbcType=VARCHAR},
      </if>
      <if test="remark1 != null" >
        #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null" >
        #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="remark3 != null" >
        #{remark3,jdbcType=VARCHAR},
      </if>
      <if test="remark4 != null" >
        #{remark4,jdbcType=VARCHAR},
      </if>
      <if test="remark5 != null" >
        #{remark5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.MechanicExample" resultType="java.lang.Integer" >
    select count(*) from mechanic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update mechanic
    <set >
      <if test="record.pno != null" >
        pno = #{record.pno,jdbcType=VARCHAR},
      </if>
      <if test="record.tid != null" >
        tid = #{record.tid,jdbcType=INTEGER},
      </if>
      <if test="record.jid != null" >
        jid = #{record.jid,jdbcType=INTEGER},
      </if>
      <if test="record.rid != null" >
        rid = #{record.rid,jdbcType=INTEGER},
      </if>
      <if test="record.mcisgroup != null" >
        mcisgroup = #{record.mcisgroup,jdbcType=INTEGER},
      </if>
      <if test="record.lid != null" >
        lid = #{record.lid,jdbcType=INTEGER},
      </if>
      <if test="record.mcworktype != null" >
        mcworktype = #{record.mcworktype,jdbcType=VARCHAR},
      </if>
      <if test="record.mcbrand != null" >
        mcbrand = #{record.mcbrand,jdbcType=VARCHAR},
      </if>
      <if test="record.remark1 != null" >
        remark1 = #{record.remark1,jdbcType=VARCHAR},
      </if>
      <if test="record.remark2 != null" >
        remark2 = #{record.remark2,jdbcType=VARCHAR},
      </if>
      <if test="record.remark3 != null" >
        remark3 = #{record.remark3,jdbcType=VARCHAR},
      </if>
      <if test="record.remark4 != null" >
        remark4 = #{record.remark4,jdbcType=VARCHAR},
      </if>
      <if test="record.remark5 != null" >
        remark5 = #{record.remark5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update mechanic
    set pno = #{record.pno,jdbcType=VARCHAR},
      tid = #{record.tid,jdbcType=INTEGER},
      jid = #{record.jid,jdbcType=INTEGER},
      rid = #{record.rid,jdbcType=INTEGER},
      mcisgroup = #{record.mcisgroup,jdbcType=INTEGER},
      lid = #{record.lid,jdbcType=INTEGER},
      mcworktype = #{record.mcworktype,jdbcType=VARCHAR},
      mcbrand = #{record.mcbrand,jdbcType=VARCHAR},
      remark1 = #{record.remark1,jdbcType=VARCHAR},
      remark2 = #{record.remark2,jdbcType=VARCHAR},
      remark3 = #{record.remark3,jdbcType=VARCHAR},
      remark4 = #{record.remark4,jdbcType=VARCHAR},
      remark5 = #{record.remark5,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>